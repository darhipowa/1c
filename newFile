
Процедура ПриЗаписи(Отказ)
	
	//запись истории статусов заявки в РС ИсторияСтатусов
	
	МенеджерЗаписи = РегистрыСведений.ИсторияСтатусов.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Период = ТекущаяДата();
	МенеджерЗаписи.Дата = ТекущаяДата();
	МенеджерЗаписи.Заявка = Ссылка;
	МенеджерЗаписи.Статус = СтатусЗаявки;
	
	МенеджерЗаписи.Записать(); 
	
	
	//учет этапов работы с заявкой
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетЭтаповРаботыСЗаявкой.Заявка.Ссылка КАК ЗаявкаСсылка,
	|	УчетЭтаповРаботыСЗаявкой.ЭтапРаботы КАК ЭтапРаботы
	|ИЗ
	|	РегистрСведений.УчетЭтаповРаботыСЗаявкой КАК УчетЭтаповРаботыСЗаявкой
	|ГДЕ
	|	УчетЭтаповРаботыСЗаявкой.Заявка.Ссылка = &Ссылка
	|	И УчетЭтаповРаботыСЗаявкой.ЭтапРаботы = &ЭтапРаботы";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ЭтапРаботы", ЭтапРаботы);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Количество() = 0 Тогда 
		
		МенеджерЗаписиЭтапов = РегистрыСведений.УчетЭтаповРаботыСЗаявкой.СоздатьМенеджерЗаписи();
		МенеджерЗаписиЭтапов.Дата = ТекущаяДата();
		МенеджерЗаписиЭтапов.Заявка = Ссылка;
		МенеджерЗаписиЭтапов.ЭтапРаботы = ЭтапРаботы;
		МенеджерЗаписиЭтапов.Записать();
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//делаем проверку на наличие идентификатора картриджа в регистре УчетКартриджей,
	//если идентификатор отсутствует - записываем движения
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетКартриджей.Идентификатор КАК Идентификатор
	|ИЗ
	|	РегистрСведений.УчетКартриджей КАК УчетКартриджей
	|ГДЕ
	|	УчетКартриджей.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если РезультатЗапроса.Количество() = 0 Тогда
		Движения.УчетКартриджей.Записывать = Истина;
		Движение = Движения.УчетКартриджей.Добавить();
		Движение.Картридж = Картридж;
		Движение.Идентификатор = Идентификатор;
	КонецЕсли;
	
	
	//РН ОстаткиКомплектующих Расход
	
	Движения.ОстаткиКомплектующих.Записывать = Истина;
	Для Каждого ТекСтрока Из ДанныеПоРемонту Цикл
		
		Движение = Движения.ОстаткиКомплектующих.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Наименование = ТекСтрока.Комплектующее;
		Движение.ИдентификаторКартриджа = Идентификатор;
		Движение.Количество = ТекСтрока.Количество;
		
	КонецЦикла;
	
	Движения.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаДанныеПоРемонту.Комплектующее КАК Комплектующее
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Документ.Заявка.ДанныеПоРемонту КАК ЗаявкаДанныеПоРемонту
	|ГДЕ
	|	ЗаявкаДанныеПоРемонту.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиКомплектующихОстатки.Наименование.Представление КАК НаименованиеПредставление,
	|	ОстаткиКомплектующихОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ОстаткиКомплектующих.Остатки(
	|			&Граница,
	|			Наименование В
	|				(ВЫБРАТЬ
	|					ВТ.Комплектующее КАК Комплектующее
	|				ИЗ
	|					ВТ КАК ВТ)) КАК ОстаткиКомплектующихОстатки
	|ГДЕ
	|	ОстаткиКомплектующихОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("Граница", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда 
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Сообщить("Недостаточно товара " + ВыборкаДетальныеЗаписи.НаименованиеПредставление	+ "! Не хватает " +(-ВыборкаДетальныеЗаписи.КоличествоОстаток)+ " шт."); 
				
		КонецЦикла;
		
		Отказ = Истина;
		
	КонецЕсли;
	
	
	
КонецПроцедуры

